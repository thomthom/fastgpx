name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      repository:
        description: "Choose where to publish"
        required: true
        default: testpypi
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  build_binaries:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install and setup UV with Python (${{ matrix.python-version }})
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip and install build tools
        run: |
          uv pip install --upgrade pip build twine

      - name: Build package
        run: |
          uv build --wheel

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ runner.os }}-wheel
          path: dist/*.whl

  build_sdist:
    runs-on: 'ubuntu-latest'

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install and setup UV with Python
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.11

      - name: Upgrade pip and install build tools
        run: |
          uv pip install --upgrade pip build twine

      - name: Build package
        run: |
          uv build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-sdist
          path: dist/*.tar.gz

  publish:
    name: Publish to ${{ inputs.repository }}
    runs-on: ${{ matrix.os }}

    needs: [build_binaries, build_sdist]

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*-wheel
          path: dist

      - name: Download sdist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-sdist
          path: dist

      - name: List artifacts
        run: ls -R dist

      - name: Install and setup UV with Python
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.11

      - name: Install Twine
        run: |
          uv pip install --upgrade twine

      - name: Upload to TestPyPI
        if: inputs.repository == 'testpypi'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          uv run twine upload --verbose --repository-url https://test.pypi.org/legacy/ dist/**/*.whl dist/*.tar.gz

      - name: Upload to PyPI
        if: inputs.repository == 'pypi'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          uv run twine upload dist/**/*.whl dist/*.tar.gz
