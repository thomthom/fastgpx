name: fastgpx Tests

on:
  push:
    branches: [main, dev/github]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      # fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.11"]
        compiler: [gcc-14, clang, default]
        exclude:
          # gcc and clang for Linux-only.
          # They are faster than the Windows jobs. So skipping clang on Windows.
          - os: windows-latest
            compiler: gcc-14
          - os: windows-latest
            compiler: clang
          # Skip default compiler on Ubuntu (you want minimum gcc-14 or clang).
          # At the moment the default compiler on Ubuntu is gcc-13.
          - os: ubuntu-latest
            compiler: default

    env:
      FASTGPX_WARNINGS_AS_ERRORS: ON

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Install and setup UV with Python (${{ matrix.python-version }})
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set compiler if needed
        shell: bash
        run: |
          if [[ "${{ matrix.compiler }}" == "gcc-14" ]]; then
            echo "Using GCC 14"
            echo "CC=gcc-14" >> $GITHUB_ENV
            echo "CXX=g++-14" >> $GITHUB_ENV
          elif [[ "${{ matrix.compiler }}" == "clang" ]]; then
            echo "Using Clang"
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Run tests
        run: |
          uv run --frozen --verbose pytest --junitxml=reports/pytest-results.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results (${{ matrix.os }}, ${{ matrix.python-version }}, ${{ matrix.compiler }})
          path: reports/pytest-results.xml

  publish-test-results:
    name: Publish Test Results
    needs: test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      # https://github.com/EnricoMi/publish-unit-test-result-action?tab=readme-ov-file#permissions
      checks: write
      contents: read
      issues: read
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          comment_mode: off # pull-requests: write not needed
          files: artifacts/**/*.xml
